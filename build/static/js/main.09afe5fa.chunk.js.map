{"version":3,"sources":["pages/login.js","pages/dashboard.js","pages/calendar.js","pages/Todo.js","pages/Todomain.js","pages/reference.js","App.js","reportWebVitals.js","index.js"],"names":["Login","useState","email","setEmail","password","setPassword","isAuth","setIsAuth","to","className","Form","onSubmit","event","preventDefault","Group","size","controlId","Label","Control","autoFocus","type","value","onChange","e","target","Button","block","disabled","length","includes","onClick","Dashboard","Calendar","initialMonth","Date","selectedDays","Todo","props","state","newText","todo","text","editing","this","remove","id","checkToggle","setState","saveEditedValue","console","log","completed","checkTodoToggle","onDoubleClick","showEditForm","placeholder","getNewText","deleteTodo","React","Component","TodoMain","todos","newId","newTodos","filter","item","map","getNewValue","addTodo","Reference","avatarUrl","username","userid","userlogin","userbio","githubtUrl","$","get","result","data","avatar_url","name","login","bio","html_url","src","alt","href","App","exact","activeClassName","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09afe5fa.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isAuth, setIsAuth] = useState(true);\r\n\r\n  if(!isAuth){\r\n    return <Redirect to = \"/dashboard\" />\r\n  }\r\n\r\n  function validateForm() {\r\n    return email.length > 0 && password.length > 0 && email.includes('@');\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group size=\"lg\" controlId=\"email\">\r\n          <Form.Label>Email: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <br></br>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password: </Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <br></br>\r\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()} onClick = {() => setIsAuth(false)}>\r\n          Login\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// import React , { useState } from \"react\";\r\n// import { Redirect } from \"react-router-dom\";\r\n\r\n// const Login = () => {\r\n//   const [isAuth, setIsAuth] = useState(true);\r\n\r\n//   if(!isAuth){\r\n//     return <Redirect to = \"/dashboard\" />\r\n//   }\r\n  \r\n//     return<div>\r\n//       <h3>This is Login page.</h3>\r\n//       <input placeholder = \"Enter email\" type = \"text\" /><br />\r\n//       if (\"text\") {\r\n        \r\n//       }\r\n//       <input placeholder = \"Enter password\" type = \"password\" /><br /><br />\r\n//       <button onClick = {() => setIsAuth(false)}>Login</button><br/><br/>\r\n// </div>\r\n// }\r\n\r\n// export default Login;\r\n","import React , { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Dashboard = () => {\r\n  const [isAuth, setIsAuth] = useState(true);\r\n\r\n  if(!isAuth){\r\n    return <Redirect to = \"/login\" />\r\n  }\r\n    return<div>\r\n      <h3>Welcome</h3>\r\n      <button onClick = {() => setIsAuth(false)}>Logout</button><br/><br/>\r\n      {/* <div>isAuth: {isAuth.toString()}</div> */}\r\n</div>\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\";\r\nimport DayPicker from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\n\r\nconst Calendar = () => {\r\n return(<div>\r\n\r\n        <h1>Demo Date</h1>\r\n\r\n        <DayPicker\r\n            initialMonth={new Date(2021, 5)}\r\n            selectedDays={[\r\n                new Date(2021, 5, 23),\r\n            ]}\r\n        />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calendar;","import React from 'react';\r\n\r\nclass Todo extends React.Component {\r\n    constructor (props) {\r\n        super (props);\r\n\r\n        this.state = {\r\n            newText: props.todo.text,\r\n            editing: false,\r\n        }\r\n    }\r\n    \r\n    // 刪除\r\n    deleteTodo () {\r\n        this.props.remove(this.props.todo.id);\r\n    }\r\n\r\n    // 完成\r\n    checkTodoToggle () {\r\n        this.props.checkToggle(this.props.todo.id);\r\n    }\r\n\r\n    // 顯示編輯表單\r\n    showEditForm() {\r\n        const {editing} = this.state;\r\n\r\n        this.setState({\r\n            newText: this.props.todo.text,\r\n            editing: !editing,\r\n        });\r\n    }\r\n\r\n    // 取表單輸入內容\r\n    getNewText(e) {\r\n        const newText = e.target.value;\r\n\r\n        this.setState({\r\n            newText: newText,\r\n        });\r\n        \r\n    }\r\n    \r\n    // 儲存編輯資料\r\n    saveEditedValue() {\r\n        const {newText} = this.state;\r\n\r\n        this.props.saveEditedValue(this.props.todo.id, newText);\r\n        this.setState({\r\n            newText: this.props.todo.text,\r\n            editing: false,\r\n        });\r\n    }\r\n\r\n    render () {\r\n        const {editing} = this.state;\r\n        const {todo} = this.props;\r\n        \r\n        console.log(this.state)\r\n\r\n        return (\r\n            <li className={ \"list-group-item list-row \" + (todo.completed ? \"done\" : \"\") }>\r\n                <div className=\"btn-circle checkbox\" onClick={() => this.checkTodoToggle()} >✓</div>\r\n                <div className=\"list-text__container\" onDoubleClick={() => this.showEditForm()}>\r\n                    { \r\n                        !editing && <span className=\"list-text\">{ todo.text }</span> \r\n                    }\r\n                    {\r\n                        editing && \r\n                        <div className={\"input-group\"}>\r\n                            <input type=\"text\" className=\"form-control\" placeholder={todo.text} value={this.state.newText} onChange={(e) => this.getNewText(e)}/>\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => this.showEditForm()}>取消</button>\r\n                                <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => this.saveEditedValue()}>完成編輯</button>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    \r\n                </div>\r\n                <div className=\"btn-circle delete\" onClick={() => this.deleteTodo()} >✕</div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nclass TodoMain extends React.Component {\r\n    constructor (props) {\r\n        super (props);\r\n        this.state = {\r\n            todos: [ //規則改這裡就好，completed決定是否劃掉\r\n                // {id: 1, text: 'Rule1: ', completed: false},\r\n                // {id: 2, text: 'Rule2:', completed: true},\r\n                // {id: 3, text: 'Rule3:', completed: false},\r\n            ],\r\n            newId: 4,\r\n            newText: '',\r\n        }\r\n    }\r\n    \r\n    // 取 todo 的內容\r\n    getNewValue (e) {\r\n        const newText = e.target.value;\r\n        \r\n        this.setState({\r\n            newText: newText,\r\n        });\r\n    }\r\n    \r\n\r\n    // 新增\r\n    addTodo (e) {\r\n        const {todos, newText, newId} = this.state;\r\n        \r\n        if (!newText) {\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        \r\n        this.setState({\r\n            todos: [\r\n                ...todos,\r\n                {id: newId, text: newText, completed: false}\r\n            ],\r\n            newId: newId +1,\r\n            newText: '',\r\n        });\r\n    }\r\n\r\n    // 刪除\r\n    deleteTodo (id) {\r\n        const {todos} = this.state;\r\n        \r\n        let newTodos = todos.filter((item) => item.id !== id);\r\n        \r\n        this.setState({\r\n            todos: newTodos,\r\n        });        \r\n    }\r\n\r\n    // 完成\r\n    checkTodoToggle (id) {\r\n        const {todos} = this.state;\r\n\r\n        let newTodos = todos.map((item) => {\r\n            if(item.id === id){\r\n                item.completed = !item.completed;\r\n            }\r\n            return item;\r\n        });\r\n        \r\n        this.setState({\r\n            todos: newTodos,\r\n        })\r\n    }\r\n\r\n    // 編輯\r\n    saveEditedValue(id, value) {\r\n        const {todos} = this.state;\r\n\r\n        let newTodos = todos.map((item) => {\r\n            if(item.id === id){\r\n                item.text = value;\r\n            }\r\n            return item;\r\n        });\r\n        \r\n        this.setState({\r\n            todos: newTodos,\r\n        })\r\n    }\r\n    \r\n    render () {\r\n        let {todos} = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <header className=\"header__container\">\r\n                    <h1 className=\"header__site-title\">Todo List</h1>\r\n                </header>\r\n                <div className=\"input-group mb-3\">\r\n                    <input type=\"text\" className=\"form-control\" id=\"input-add\" placeholder=\"\"\r\n                        value={this.state.newText}\r\n                        onChange={(e) => this.getNewValue(e)} />\r\n                    <div className=\"input-group-append\">\r\n                        <button\r\n                            className=\"btn btn-outline-secondary\"\r\n                            onClick={(e) => this.addTodo(e)}\r\n                        >add</button>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    {todos.map((todo) =>\r\n                        <Todo\r\n                            key={todo.id}\r\n                            todo={todo}\r\n                            remove={(id) => this.deleteTodo(id)}\r\n                            checkToggle={(id) => this.checkTodoToggle(id)}\r\n                            saveEditedValue={(id, value) => this.saveEditedValue(id, value)}\r\n                        />\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoMain;","import React from 'react';\r\nimport $ from 'jquery';\r\n\r\nclass Reference extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            avatarUrl: '',\r\n            username: '',\r\n            userid: '',\r\n            userlogin: '',\r\n            userbio: '',\r\n            githubtUrl: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        $.get(\"https://api.github.com/users/cluemediator\", (result) => {\r\n            console.log(result);\r\n            const data = result;\r\n            if (data) {\r\n                this.setState({\r\n                    avatarUrl: data.avatar_url,\r\n                    username: data.name,\r\n                    userid: data.id,\r\n                    userlogin: data.login,\r\n                    userbio: data.bio,\r\n                    githubtUrl: data.html_url,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src={this.state.avatarUrl} alt = {\"\"}/>\r\n                <h1>Name: {this.state.username}</h1>\r\n                <h2>ID: {this.state.userid}</h2>\r\n                <h3>Github_Name: {this.state.userlogin}</h3>\r\n                <h4>Bio: {this.state.userbio}</h4>\r\n                Github:<a href = {this.state.githubtUrl}>https://github.com/cluemediator</a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reference;","import './App.css';\nimport React from 'react';\n// import Home from './pages/home';\nimport Login from './pages/login';\nimport Dashboard from './pages/dashboard';\nimport Calendar from './pages/calendar';\nimport TodoMain from './pages/Todomain';\nimport Reference from './pages/reference'\n\nimport {BrowserRouter as Router, Route, Link, NavLink, Switch} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className = \"App\">\n        <h2>Web Programming</h2>\n\n        <Link exact to = \"/login\">Login</Link>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        {/* <NavLink activeClassName = \"active\" to = \"/dashboard\">Dashboard</NavLink> */}\n        <NavLink activeClassName = \"active\" to = \"/calendar\">Calendar</NavLink>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <NavLink activeClassName = \"active\" to = \"/TodoMain\">Todolist</NavLink>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <NavLink activeClassName = \"active\" to = \"/reference\">Reference</NavLink>\n       \n        <hr />\n\n        <Switch>\n          <Route exact path = \"/login\" component ={Login} />\n          <Route path = \"/dashboard\" component ={Dashboard} />\n          <Route path = \"/calendar\" component ={Calendar} />\n          <Route path = \"/TodoMain\" component ={TodoMain} />\n          <Route path = \"/reference\" component ={Reference} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}